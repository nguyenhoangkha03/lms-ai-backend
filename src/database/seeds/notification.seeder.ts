import { Injectable } from '@nestjs/common';
import { InjectRepository } from '@nestjs/typeorm';
import { Repository } from 'typeorm';
import { Notification } from '@/modules/notification/entities/notification.entity';
import {
  NotificationType,
  NotificationPriority,
  NotificationCategory,
} from '@/common/enums/notification.enums';

@Injectable()
export class NotificationSeeder {
  constructor(
    @InjectRepository(Notification)
    private readonly notificationRepository: Repository<Notification>,
  ) {}

  async seed(): Promise<void> {
    // Check if data already exists
    const existingNotifications = await this.notificationRepository.count();
    if (existingNotifications > 0) {
      console.log('Notifications already exist, skipping seeding...');
      return;
    }

    console.log('Seeding notifications...');

    const userId = '1a6b4a1b-8fb9-4e52-b5a2-400c9555c1fc';
    
    const notificationsData = [
      {
        userId,
        title: 'Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi Learnary! üéâ',
        message: 'Ch√∫c m·ª´ng b·∫°n ƒë√£ t·∫°o t√†i kho·∫£n th√†nh c√¥ng! H√£y kh√°m ph√° h√†ng ng√†n kh√≥a h·ªçc ch·∫•t l∆∞·ª£ng cao v√† b·∫Øt ƒë·∫ßu h√†nh tr√¨nh h·ªçc t·∫≠p c·ªßa b·∫°n ngay h√¥m nay.',
        type: NotificationType.ANNOUNCEMENT,
        category: NotificationCategory.SYSTEM,
        priority: NotificationPriority.HIGH,
        isRead: false,
        actionUrl: '/student/dashboard',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/1828/1828640.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          welcomeNotification: true,
          source: 'registration_flow'
        }
      },
      {
        userId,
        title: 'Kh√≥a h·ªçc "JavaScript Fundamentals" ƒë√£ c√≥ b√†i h·ªçc m·ªõi!',
        message: 'B√†i h·ªçc "Async/Await v√† Promises" v·ª´a ƒë∆∞·ª£c th√™m v√†o kh√≥a h·ªçc JavaScript Fundamentals. H√£y ti·∫øp t·ª•c h·ªçc ƒë·ªÉ ho√†n th√†nh ch∆∞∆°ng tr√¨nh nh√©!',
        type: NotificationType.LESSON_AVAILABLE,
        category: NotificationCategory.ACADEMIC,
        priority: NotificationPriority.NORMAL,
        isRead: false,
        relatedId: 'lesson-123',
        relatedType: 'lesson',
        actionUrl: '/student/courses/javascript-fundamentals/lessons/async-await',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/5968/5968292.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          courseId: 'course-456',
          courseName: 'JavaScript Fundamentals',
          lessonNumber: 8
        }
      },
      {
        userId,
        title: 'B√†i t·∫≠p "React Components" s·∫Øp h·∫øt h·∫°n n·ªôp',
        message: 'B√†i t·∫≠p React Components trong kh√≥a h·ªçc React Development s·∫Ω h·∫øt h·∫°n n·ªôp v√†o 23:59 ng√†y mai. H√£y ho√†n th√†nh v√† n·ªôp b√†i ngay ƒë·ªÉ kh√¥ng b·ªã tr·ª´ ƒëi·ªÉm nh√©!',
        type: NotificationType.ASSIGNMENT_DUE,
        category: NotificationCategory.ACADEMIC,
        priority: NotificationPriority.HIGH,
        isRead: false,
        relatedId: 'assignment-789',
        relatedType: 'assignment',
        actionUrl: '/student/assignments/react-components',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/2593/2593635.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          courseId: 'course-789',
          courseName: 'React Development',
          dueDate: new Date(Date.now() + 24 * 60 * 60 * 1000) // Tomorrow
        }
      },
      {
        userId,
        title: 'ƒêi·ªÉm b√†i ki·ªÉm tra "HTML & CSS Basics" ƒë√£ c√≥!',
        message: 'B·∫°n ƒë√£ ƒë·∫°t 85/100 ƒëi·ªÉm trong b√†i ki·ªÉm tra HTML & CSS Basics. Tuy·ªát v·ªùi! H√£y xem chi ti·∫øt k·∫øt qu·∫£ v√† feedback t·ª´ gi·∫£ng vi√™n.',
        type: NotificationType.GRADE_POSTED,
        category: NotificationCategory.ACADEMIC,
        priority: NotificationPriority.NORMAL,
        isRead: true,
        readAt: new Date(Date.now() - 2 * 60 * 60 * 1000), // 2 hours ago
        relatedId: 'quiz-456',
        relatedType: 'quiz',
        actionUrl: '/student/grades/html-css-basics-quiz',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/1828/1828884.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date(Date.now() - 3 * 60 * 60 * 1000) }
        },
        tracking: {
          impressions: 1,
          clicks: 1,
          opens: 1,
          conversions: 1,
        },
        metadata: {
          score: 85,
          maxScore: 100,
          courseId: 'course-123',
          courseName: 'Web Development Basics'
        }
      },
      {
        userId,
        title: 'Bu·ªïi h·ªçc tr·ª±c tuy·∫øn "Advanced Python" b·∫Øt ƒë·∫ßu sau 30 ph√∫t',
        message: 'Bu·ªïi h·ªçc tr·ª±c tuy·∫øn v·ªÅ "Data Structures & Algorithms in Python" s·∫Ω b·∫Øt ƒë·∫ßu l√∫c 19:30. H√£y chu·∫©n b·ªã s·∫µn s√†ng v√† tham gia ƒë√∫ng gi·ªù nh√©!',
        type: NotificationType.VIDEO_SESSION_STARTING,
        category: NotificationCategory.VIDEO_SESSION,
        priority: NotificationPriority.HIGH,
        isRead: false,
        relatedId: 'session-789',
        relatedType: 'video_session',
        actionUrl: '/student/live-sessions/advanced-python-algorithms',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/2111/2111738.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          sessionTime: new Date(Date.now() + 30 * 60 * 1000), // In 30 minutes
          instructor: 'Dr. Nguy·ªÖn VƒÉn Minh',
          courseId: 'course-python-advanced'
        }
      },
      {
        userId,
        title: 'C√≥ tin nh·∫Øn m·ªõi t·ª´ gi·∫£ng vi√™n Tr·∫ßn Th·ªã Lan',
        message: 'Gi·∫£ng vi√™n Tr·∫ßn Th·ªã Lan v·ª´a g·ª≠i tin nh·∫Øn cho b·∫°n v·ªÅ d·ª± √°n cu·ªëi kh√≥a. H√£y ki·ªÉm tra v√† ph·∫£n h·ªìi s·ªõm nh·∫•t c√≥ th·ªÉ.',
        type: NotificationType.MESSAGE_RECEIVED,
        category: NotificationCategory.SOCIAL,
        priority: NotificationPriority.NORMAL,
        isRead: false,
        relatedId: 'message-123',
        relatedType: 'message',
        actionUrl: '/student/messages/instructor-tran-thi-lan',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/732/732200.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          senderId: 'instructor-456',
          senderName: 'Tr·∫ßn Th·ªã Lan',
          messagePreview: 'Ch√†o b·∫°n, t√¥i mu·ªën th·∫£o lu·∫≠n v·ªÅ d·ª± √°n cu·ªëi kh√≥a...'
        }
      },
      {
        userId,
        title: 'Nh·∫Øc nh·ªü: ƒê√£ 2 ng√†y b·∫°n ch∆∞a h·ªçc!',
        message: 'B·∫°n ƒë√£ kh√¥ng h·ªçc b√†i t·ª´ 2 ng√†y tr∆∞·ªõc. H√£y d√†nh √≠t nh·∫•t 30 ph√∫t m·ªói ng√†y ƒë·ªÉ duy tr√¨ ti·∫øn ƒë·ªô h·ªçc t·∫≠p v√† ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u c·ªßa m√¨nh nh√©!',
        type: NotificationType.REMINDER_STUDY,
        category: NotificationCategory.SYSTEM,
        priority: NotificationPriority.MEDIUM,
        isRead: false,
        actionUrl: '/student/dashboard',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/3652/3652191.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          daysSinceLastStudy: 2,
          recommendedStudyTime: 30,
          motivationalMessage: true
        }
      },
      {
        userId,
        title: 'üèÜ Ch√∫c m·ª´ng! B·∫°n ƒë√£ ho√†n th√†nh kh√≥a h·ªçc "Git & GitHub"',
        message: 'Xu·∫•t s·∫Øc! B·∫°n ƒë√£ ho√†n th√†nh 100% kh√≥a h·ªçc Git & GitHub. Ch·ª©ng ch·ªâ ho√†n th√†nh ƒë√£ ƒë∆∞·ª£c c·∫•p v√† c√≥ th·ªÉ t·∫£i v·ªÅ t·ª´ h·ªì s∆° c·ªßa b·∫°n.',
        type: NotificationType.COURSE_COMPLETED,
        category: NotificationCategory.ACADEMIC,
        priority: NotificationPriority.HIGH,
        isRead: false,
        relatedId: 'course-git-github',
        relatedType: 'course',
        actionUrl: '/student/certificates/git-github',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/2010/2010990.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          courseId: 'course-git-github',
          courseName: 'Git & GitHub',
          completionDate: new Date(),
          certificateId: 'cert-123456',
          completionPercentage: 100
        }
      },
      {
        userId,
        title: 'B·∫°n c√≥ l·ªùi m·ªùi tham gia nh√≥m h·ªçc "React Study Group"',
        message: 'B·∫°n Nguy·ªÖn VƒÉn An ƒë√£ m·ªùi b·∫°n tham gia nh√≥m h·ªçc React Study Group. Nh√≥m hi·ªán c√≥ 8 th√†nh vi√™n v√† h·ªçp m·ªói th·ª© 7 h√†ng tu·∫ßn.',
        type: NotificationType.STUDY_GROUP_INVITATION,
        category: NotificationCategory.SOCIAL,
        priority: NotificationPriority.NORMAL,
        isRead: false,
        relatedId: 'group-react-study',
        relatedType: 'study_group',
        actionUrl: '/student/study-groups/react-study-group/invitation',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/1534/1534938.png',
        actions: [
          {
            id: 'accept',
            label: 'Ch·∫•p nh·∫≠n',
            action: 'accept_invitation',
            url: '/api/study-groups/react-study-group/accept',
            style: 'primary' as const
          },
          {
            id: 'decline',
            label: 'T·ª´ ch·ªëi',
            action: 'decline_invitation',
            url: '/api/study-groups/react-study-group/decline',
            style: 'secondary' as const
          }
        ],
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date() }
        },
        tracking: {
          impressions: 0,
          clicks: 0,
          opens: 0,
          conversions: 0,
        },
        metadata: {
          groupId: 'group-react-study',
          groupName: 'React Study Group',
          inviterId: 'user-nguyen-van-an',
          inviterName: 'Nguy·ªÖn VƒÉn An',
          memberCount: 8
        }
      },
      {
        userId,
        title: 'B·∫£o tr√¨ h·ªá th·ªëng: Learnary s·∫Ω t·∫°m ng∆∞ng ho·∫°t ƒë·ªông',
        message: 'H·ªá th·ªëng s·∫Ω b·∫£o tr√¨ t·ª´ 02:00 - 04:00 s√°ng ng√†y mai ƒë·ªÉ n√¢ng c·∫•p server. Trong th·ªùi gian n√†y, b·∫°n s·∫Ω kh√¥ng th·ªÉ truy c·∫≠p v√†o n·ªÅn t·∫£ng. C·∫£m ∆°n b·∫°n ƒë√£ th√¥ng c·∫£m!',
        type: NotificationType.SYSTEM_MAINTENANCE,
        category: NotificationCategory.SYSTEM,
        priority: NotificationPriority.MEDIUM,
        isRead: true,
        readAt: new Date(Date.now() - 5 * 60 * 60 * 1000), // 5 hours ago
        actionUrl: '/system/maintenance-info',
        iconUrl: 'https://cdn-icons-png.flaticon.com/512/1828/1828506.png',
        deliveryStatus: {
          inApp: { sent: true, deliveredAt: new Date(Date.now() - 6 * 60 * 60 * 1000) }
        },
        tracking: {
          impressions: 1,
          clicks: 0,
          opens: 1,
          conversions: 0,
        },
        metadata: {
          maintenanceStart: new Date(Date.now() + 18 * 60 * 60 * 1000), // Tomorrow 2AM
          maintenanceEnd: new Date(Date.now() + 20 * 60 * 60 * 1000), // Tomorrow 4AM
          affectedServices: ['learning_platform', 'video_streaming', 'chat'],
          isScheduled: true
        }
      }
    ];

    // Create notifications
    const notifications = this.notificationRepository.create(notificationsData);
    await this.notificationRepository.save(notifications);

    console.log(`‚úÖ Successfully seeded ${notifications.length} notifications`);
  }
}